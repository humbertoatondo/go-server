name: PostgreSQL service example
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # Service containers to run with `container-job`
  test:
    name: Test
    runs-on: ubuntu-latest

    container:
      image: node:10.16-jessie

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: golang-server
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo APP_DB_USERNAME: "postgres" >> .env
          echo APP_DB_PASSWORD: "password" >> .env
          echo APP_DB_NAME: "golang-server" >> .env
          echo APP_DB_HOST: "postgres" >> .env

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Build
        run: go build -v ./...

      - name: Test
        run: gotest -v ./...
